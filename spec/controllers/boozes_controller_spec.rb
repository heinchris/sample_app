require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe BoozesController do

  def mock_booze(stubs={})
    @mock_booze ||= mock_model(Booze, stubs).as_null_object
  end

  describe "GET show" do
    it "assigns the requested booze as @booze" do
      Booze.stub(:find).with("37") { mock_booze }
      get :show, :id => "37"
      assigns(:booze).should be(mock_booze)
    end
  end

  describe "GET new" do
    it "assigns a new booze as @booze" do
      Booze.stub(:new) { mock_booze }
      get :new
      assigns(:booze).should be(mock_booze)
    end
  end

  describe "GET edit" do
    it "assigns the requested booze as @booze" do
      Booze.stub(:find).with("37") { mock_booze }
      get :edit, :id => "37"
      assigns(:booze).should be(mock_booze)
    end
  end

  describe "POST create" do
      describe "with invalid params" do
      it "assigns a newly created but unsaved booze as @booze" do
        Booze.stub(:new).with({'these' => 'params'}) { mock_booze(:save => false) }
        post :create, :booze => {'these' => 'params'}
        assigns(:booze).should be(mock_booze)
      end

      it "re-renders the index template" do
        Booze.stub(:new) { mock_booze(:save => false) }
        post :create, :booze => {}
        response.should render_template("index")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested booze" do
        Booze.stub(:find).with("37") { mock_booze }
        mock_booze.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :booze => {'these' => 'params'}
      end

      it "assigns the requested booze as @booze" do
        Booze.stub(:find) { mock_booze(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:booze).should be(mock_booze)
      end

      it "redirects to the booze" do
        Booze.stub(:find) { mock_booze(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(booze_url(mock_booze))
      end
    end

    describe "with invalid params" do
      it "assigns the booze as @booze" do
        Booze.stub(:find) { mock_booze(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:booze).should be(mock_booze)
      end

      it "re-renders the 'edit' template" do
        Booze.stub(:find) { mock_booze(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested booze" do
      Booze.stub(:find).with("37") { mock_booze }
      mock_booze.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the boozes list" do
      Booze.stub(:find) { mock_booze }
      delete :destroy, :id => "1"
      response.should redirect_to(boozes_url)
    end
  end

end
